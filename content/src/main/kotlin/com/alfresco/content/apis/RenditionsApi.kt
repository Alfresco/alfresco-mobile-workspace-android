/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Alfresco Content Services REST API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.alfresco.content.apis

import com.alfresco.content.models.RenditionBodyCreate
import com.alfresco.content.models.RenditionEntry
import com.alfresco.content.models.RenditionPaging
import java.time.ZonedDateTime
import okhttp3.ResponseBody
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.POST

@JvmSuppressWildcards
interface RenditionsApi {
    /**
     * Create rendition
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  An asynchronous request to create a rendition for file **nodeId**.  The rendition is specified by name **id** in the request body: ```JSON {   \"id\":\"doclib\" } ```  Multiple names may be specified as a comma separated list or using a list format: ```JSON [   {      \"id\": \"doclib\"   },   {      \"id\": \"avatar\"   } ] ```
     * The endpoint is owned by defaultname service owner
     * @param nodeId The identifier of a node. (required)
     * @param renditionBodyCreate The rendition \&quot;id\&quot;. (required)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @POST("alfresco/versions/1/nodes/{nodeId}/renditions")
    suspend fun createRendition(
        @retrofit2.http.Path("nodeId") nodeId: String,
        @retrofit2.http.Body renditionBodyCreate: RenditionBodyCreate
    ): Unit
    /**
     * Get rendition information
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Gets the rendition information for **renditionId** of file **nodeId**.
     * The endpoint is owned by defaultname service owner
     * @param nodeId The identifier of a node. (required)
     * @param renditionId The name of a thumbnail rendition, for example *doclib*, or *pdf*. (required)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/nodes/{nodeId}/renditions/{renditionId}")
    suspend fun getRendition(
        @retrofit2.http.Path("nodeId") nodeId: String,
        @retrofit2.http.Path("renditionId") renditionId: String
    ): RenditionEntry
    /**
     * Get rendition content
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Gets the rendition content for **renditionId** of file **nodeId**.
     * The endpoint is owned by defaultname service owner
     * @param nodeId The identifier of a node. (required)
     * @param renditionId The name of a thumbnail rendition, for example *doclib*, or *pdf*. (required)
     * @param attachment **true** enables a web browser to download the file as an attachment. **false** means a web browser may preview the file in a new tab or window, but not download the file.  You can only set this parameter to **false** if the content type of the file is in the supported list; for example, certain image files and PDF files.  If the content type is not supported for preview, then a value of **false**  is ignored, and the attachment will be returned in the response.  (optional, default to true)
     * @param ifModifiedSince Only returns the content if it has been modified since the date provided. Use the date format defined by HTTP. For example, &#x60;Wed, 09 Mar 2016 16:56:34 GMT&#x60;.  (optional)
     * @param range The Range header indicates the part of a document that the server should return. Single part request supported, for example: bytes&#x3D;1-10.  (optional)
     * @param placeholder If **true** and there is no rendition for this **nodeId** and **renditionId**, then the placeholder image for the mime type of this rendition is returned, rather than a 404 response.  (optional, default to false)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/nodes/{nodeId}/renditions/{renditionId}/content")
    suspend fun getRenditionContent(
        @retrofit2.http.Path("nodeId") nodeId: String,
        @retrofit2.http.Path("renditionId") renditionId: String,
        @retrofit2.http.Query("attachment") attachment: Boolean? = null,
        @retrofit2.http.Header("If-Modified-Since") ifModifiedSince: ZonedDateTime?,
        @retrofit2.http.Header("Range") range: String?,
        @retrofit2.http.Query("placeholder") placeholder: Boolean? = null
    ): ResponseBody
    /**
     * List renditions
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Gets a list of the rendition information for each rendition of the the file **nodeId**, including the rendition id.  Each rendition returned has a **status**: CREATED means it is available to view or download, NOT_CREATED means the rendition can be requested.  You can use the **where** parameter to filter the returned renditions by **status**. For example, the following **where** clause will return just the CREATED renditions:  ``` (status='CREATED') ```
     * The endpoint is owned by defaultname service owner
     * @param nodeId The identifier of a node. (required)
     * @param where A string to restrict the returned objects by using a predicate. (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/nodes/{nodeId}/renditions")
    suspend fun listRenditions(
        @retrofit2.http.Path("nodeId") nodeId: String,
        @retrofit2.http.Query("where") where: String? = null
    ): RenditionPaging
}
