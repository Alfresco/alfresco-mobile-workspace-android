/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Alfresco Content Services REST API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.alfresco.content.apis

import com.alfresco.content.models.TicketBody
import com.alfresco.content.models.TicketEntry
import com.alfresco.content.models.ValidTicketEntry
import retrofit2.http.DELETE
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.POST

@JvmSuppressWildcards
interface AuthenticationApi {
    /**
     * Create ticket (login)
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Logs in and returns the new authentication ticket.  The userId and password properties are mandatory in the request body. For example: ```JSON {     \"userId\": \"jbloggs\",     \"password\": \"password\" } ``` To use the ticket in future requests you should pass it in the request header. For example using Javascript:   ```Javascript     request.setRequestHeader (\"Authorization\", \"Basic \" + btoa(ticket));   ```
     * The endpoint is owned by defaultname service owner
     * @param ticketBodyCreate The user credential. (required)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @POST("authentication/versions/1/tickets")
    suspend fun createTicket(
        @retrofit2.http.Body ticketBodyCreate: TicketBody
    ): TicketEntry
    /**
     * Delete ticket (logout)
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Deletes logged in ticket (logout).
     * The endpoint is owned by defaultname service owner
     */
    @Headers(
        "Content-Type: application/json"
    )
    @DELETE("authentication/versions/1/tickets/-me-")
    suspend fun deleteTicket(): Unit
    /**
     * Validate ticket
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Validates the specified ticket (derived from Authorization header) is still valid.  For example, you can pass the Authorization request header using Javascript:   ```Javascript     request.setRequestHeader (\"Authorization\", \"Basic \" + btoa(ticket));   ```
     * The endpoint is owned by defaultname service owner
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("authentication/versions/1/tickets/-me-")
    suspend fun validateTicket(): ValidTicketEntry
}
