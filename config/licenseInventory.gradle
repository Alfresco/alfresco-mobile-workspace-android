import groovy.json.JsonSlurper

apply plugin: 'com.jaredsburrows.license'

licenseReport {
    generateCsvReport = false
    generateHtmlReport = false
    generateJsonReport = true
}

def rename = [
    "The Apache Software License, Version 2.0": "Apache License 2.0",
    "The Apache License, Version 2.0": "Apache License 2.0",
    "Apache License, Version 2.0": "Apache License 2.0",
    "Apache License V2.0": "Apache License 2.0",
    "Apache 2.0": "Apache License 2.0",
    "GNU General Public License, version 2 (GPL2), with the classpath exception": "GNU General Public License with Classpath Exceptions version 2.0"
]

android.applicationVariants.all { v ->
    def variant = v.name.capitalize()

    task("licenseInventory${variant}") {
        description "Creates license inventory CSV for ${variant} variant."
        group "Reporting"
        dependsOn "license${variant}Report"

        doLast {
            def report = new File("$buildDir/reports/licenses/license${variant}Report.json")
            def json = new JsonSlurper().parseText(report.text)
            json.sort { a, b -> a.dependency.compareTo(b.dependency) }

            def output = new File("$buildDir/reports/licenses/inventory${variant}.csv")
            output.newWriter().withWriter { w ->
                w << "Package,License\n"
                json.each { dep ->
                    if (dep.licenses.size() > 0) {
                        def license = dep.licenses.first().license
                        license = rename.containsKey(license) ? rename.get(license) : license
                        w << "${dep.dependency},${license}\n"
                    } else {
                        w << "${dep.dependency},UNKNOWN\n"
                    }
                }
            }

            logger.quiet("Created: $output")
        }
    }
}
