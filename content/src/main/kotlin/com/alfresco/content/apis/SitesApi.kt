/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Alfresco Content Services REST API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.alfresco.content.apis

import com.alfresco.content.models.SiteBodyCreate
import com.alfresco.content.models.SiteBodyUpdate
import com.alfresco.content.models.SiteContainerEntry
import com.alfresco.content.models.SiteContainerPaging
import com.alfresco.content.models.SiteEntry
import com.alfresco.content.models.SiteGroupEntry
import com.alfresco.content.models.SiteGroupPaging
import com.alfresco.content.models.SiteMemberEntry
import com.alfresco.content.models.SiteMemberPaging
import com.alfresco.content.models.SiteMembershipApprovalBody
import com.alfresco.content.models.SiteMembershipBodyCreate
import com.alfresco.content.models.SiteMembershipBodyUpdate
import com.alfresco.content.models.SiteMembershipRejectionBody
import com.alfresco.content.models.SiteMembershipRequestBodyCreate
import com.alfresco.content.models.SiteMembershipRequestBodyUpdate
import com.alfresco.content.models.SiteMembershipRequestEntry
import com.alfresco.content.models.SiteMembershipRequestPaging
import com.alfresco.content.models.SiteMembershipRequestWithPersonPaging
import com.alfresco.content.models.SitePaging
import com.alfresco.content.models.SiteRoleEntry
import com.alfresco.content.models.SiteRolePaging
import com.alfresco.content.tools.CSV
import retrofit2.http.DELETE
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.POST
import retrofit2.http.PUT

@JvmSuppressWildcards
interface SitesApi {
    /**
     * Approve a site membership request
     * Approve a site membership request.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param inviteeId The invitee user name. (required)
     * @param siteMembershipApprovalBody Accepting a request to join, optionally, allows assignment of a role to the user.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @POST("alfresco/versions/1/sites/{siteId}/site-membership-requests/{inviteeId}/approve")
    suspend fun approveSiteMembershipRequest(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("inviteeId") inviteeId: String,
        @retrofit2.http.Body siteMembershipApprovalBody: SiteMembershipApprovalBody
    ): Unit
    /**
     * Create a site
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Creates a default site with the given details.  Unless explicitly specified, the site id will be generated from the site title. The site id must be unique and only contain alphanumeric and/or dash characters.  Note: the id of a site cannot be updated once the site has been created.  For example, to create a public site called \"Marketing\" the following body could be used: ```JSON {   \"title\": \"Marketing\",   \"visibility\": \"PUBLIC\" } ```  The creation of the (surf) configuration files required by Share can be skipped via the **skipConfiguration** query parameter.  **Note:** if skipped then such a site will **not** work within Share.  The addition of the site to the user's site favorites can be skipped via the **skipAddToFavorites** query parameter.  The creator will be added as a member with Site Manager role.  When you create a site, a container called **documentLibrary** is created for you in the new site. This container is the root folder for content stored in the site.
     * The endpoint is owned by defaultname service owner
     * @param siteBodyCreate The site details (required)
     * @param skipConfiguration Flag to indicate whether the Share-specific (surf) configuration files for the site should not be created. (optional, default to false)
     * @param skipAddToFavorites Flag to indicate whether the site should not be added to the user&#39;s site favorites. (optional, default to false)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @POST("alfresco/versions/1/sites")
    suspend fun createSite(
        @retrofit2.http.Body siteBodyCreate: SiteBodyCreate,
        @retrofit2.http.Query("skipConfiguration") skipConfiguration: Boolean? = null,
        @retrofit2.http.Query("skipAddToFavorites") skipAddToFavorites: Boolean? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteEntry
    /**
     * Create a site membership for group
     * **Note:** this endpoint is available in Alfresco 7.0.0 and newer versions.  Creates a site membership for group **groupId** on site **siteId**. You can set the **role** to one of four types: * SiteConsumer * SiteCollaborator * SiteContributor * SiteManager **Note:** You can create more than one site membership by specifying a list of group in the JSON body like this:  ```JSON   [    {      \"role\": \"SiteConsumer\",      \"id\": \"authorityId\"    },    {      \"role\": \"SiteConsumer\",      \"id\": \"authorityId\"    }   ] ``` If you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example: ```JSON   {     \"list\": {       \"pagination\": {         \"count\": 2,         \"hasMoreItems\": false,         \"totalItems\": 2,         \"skipCount\": 0,         \"maxItems\": 100       },       \"entries\": [         {           \"entry\": {             ...           }         },         {           \"entry\": {             ...           }         }       ]     }   } ```
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param siteMembershipBodyCreate The group to add and their role (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @POST("alfresco/versions/1/sites/{siteId}/group-members")
    suspend fun createSiteGroupMembership(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Body siteMembershipBodyCreate: SiteMembershipBodyCreate,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteGroupEntry
    /**
     * Create a site membership
     * Creates a site membership for person **personId** on site **siteId**.  You can set the **role** to one of four types:  * SiteConsumer * SiteCollaborator * SiteContributor * SiteManager  **Note:** You can create more than one site membership by specifying a list of people in the JSON body like this:  ```JSON [   {     \"role\": \"SiteConsumer\",     \"id\": \"joe\"   },   {     \"role\": \"SiteConsumer\",     \"id\": \"fred\"   } ] ``` If you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:  ```JSON {   \"list\": {     \"pagination\": {       \"count\": 2,       \"hasMoreItems\": false,       \"totalItems\": 2,       \"skipCount\": 0,       \"maxItems\": 100     },     \"entries\": [       {         \"entry\": {           ...         }       },       {         \"entry\": {           ...         }       }     ]   } } ```
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param siteMembershipBodyCreate The person to add and their role (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @POST("alfresco/versions/1/sites/{siteId}/members")
    suspend fun createSiteMembership(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Body siteMembershipBodyCreate: SiteMembershipBodyCreate,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteMemberEntry
    /**
     * Create a site membership request
     * Create a site membership request for yourself on the site with the identifier of **id**, specified in the JSON body. The result of the request differs depending on the type of site.  * For a **public** site, you join the site immediately as a SiteConsumer. * For a **moderated** site, your request is added to the site membership request list. The request waits for approval from the Site Manager. * You cannot request membership of a **private** site. Members are invited by the site administrator.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.   **Note:** You can create site membership requests for more than one site by specifying a list of sites in the JSON body like this:  ```JSON [   {     \"message\": \"Please can you add me\",     \"id\": \"test-site-1\",     \"title\": \"Request for test site 1\",   },   {     \"message\": \"Please can you add me\",     \"id\": \"test-site-2\",     \"title\": \"Request for test site 2\",   } ] ``` If you specify a list as input, then a paginated list rather than an entry is returned in the response body. For example:  ```JSON {   \"list\": {     \"pagination\": {       \"count\": 2,       \"hasMoreItems\": false,       \"totalItems\": 2,       \"skipCount\": 0,       \"maxItems\": 100     },     \"entries\": [       {         \"entry\": {           ...         }       },       {         \"entry\": {           ...         }       }     ]   } } ```
     * The endpoint is owned by defaultname service owner
     * @param personId The identifier of a person. (required)
     * @param siteMembershipRequestBodyCreate Site membership request details (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @POST("alfresco/versions/1/people/{personId}/site-membership-requests")
    suspend fun createSiteMembershipRequestForPerson(
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Body siteMembershipRequestBodyCreate: SiteMembershipRequestBodyCreate,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteMembershipRequestEntry
    /**
     * Delete a site
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Deletes the site with **siteId**.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param permanent Flag to indicate whether the site should be permanently deleted i.e. bypass the trashcan. (optional, default to false)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @DELETE("alfresco/versions/1/sites/{siteId}")
    suspend fun deleteSite(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Query("permanent") permanent: Boolean? = null
    ): Unit
    /**
     * Delete a group membership for site
     * **Note:** this endpoint is available in Alfresco 7.0.0 and newer versions.  Deletes group **groupId** as a member of site **siteId**.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param groupId The identifier of a group. (required)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @DELETE("alfresco/versions/1/sites/{siteId}/group-members/{groupId}")
    suspend fun deleteSiteGroupMembership(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("groupId") groupId: String
    ): Unit
    /**
     * Delete a site membership
     * Deletes person **personId** as a member of site **siteId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param personId The identifier of a person. (required)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @DELETE("alfresco/versions/1/sites/{siteId}/members/{personId}")
    suspend fun deleteSiteMembership(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("personId") personId: String
    ): Unit
    /**
     * Delete a site membership
     * Deletes person **personId** as a member of site **siteId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.
     * The endpoint is owned by defaultname service owner
     * @param personId The identifier of a person. (required)
     * @param siteId The identifier of a site. (required)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @DELETE("alfresco/versions/1/people/{personId}/sites/{siteId}")
    suspend fun deleteSiteMembershipForPerson(
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Path("siteId") siteId: String
    ): Unit
    /**
     * Delete a site membership request
     * Deletes the site membership request to site **siteId** for person **personId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.
     * The endpoint is owned by defaultname service owner
     * @param personId The identifier of a person. (required)
     * @param siteId The identifier of a site. (required)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @DELETE("alfresco/versions/1/people/{personId}/site-membership-requests/{siteId}")
    suspend fun deleteSiteMembershipRequestForPerson(
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Path("siteId") siteId: String
    ): Unit
    /**
     * Get a site
     * Gets information for site **siteId**.  You can use the **relations** parameter to include one or more related entities in a single response and so reduce network traffic.  The entity types in Alfresco are organized in a tree structure. The **sites** entity has two children, **containers** and **members**. The following relations parameter returns all the container and member objects related to the site **siteId**:  ``` containers,members ```
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param relations Use the relations parameter to include one or more related entities in a single response. (optional)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/sites/{siteId}")
    suspend fun getSite(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Query("relations") @CSV relations: List<String>? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteEntry
    /**
     * Get a site container
     * Gets information on the container **containerId** in site **siteId**.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param containerId The unique identifier of a site container. (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/sites/{siteId}/containers/{containerId}")
    suspend fun getSiteContainer(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("containerId") containerId: String,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteContainerEntry
    /**
     * Get information about site membership of group
     * **Note:** this endpoint is available in Alfresco 7.0.0 and newer versions.  Gets site membership information for group **groupId** on site **siteId**.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param groupId The identifier of a group. (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/sites/{siteId}/group-members/{groupId}")
    suspend fun getSiteGroupMembership(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("groupId") groupId: String,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteGroupEntry
    /**
     * Get a site membership
     * Gets site membership information for person **personId** on site **siteId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param personId The identifier of a person. (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/sites/{siteId}/members/{personId}")
    suspend fun getSiteMembership(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteMemberEntry
    /**
     * Get a site membership
     * Gets site membership information for person **personId** on site **siteId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.
     * The endpoint is owned by defaultname service owner
     * @param personId The identifier of a person. (required)
     * @param siteId The identifier of a site. (required)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/people/{personId}/sites/{siteId}")
    suspend fun getSiteMembershipForPerson(
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Path("siteId") siteId: String
    ): SiteRoleEntry
    /**
     * Get a site membership request
     * Gets the site membership request for site **siteId** for person **personId**, if one exists.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.
     * The endpoint is owned by defaultname service owner
     * @param personId The identifier of a person. (required)
     * @param siteId The identifier of a site. (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/people/{personId}/site-membership-requests/{siteId}")
    suspend fun getSiteMembershipRequestForPerson(
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteMembershipRequestEntry
    /**
     * Get site membership requests
     * Get the list of site membership requests the user can action.  You can use the **where** parameter to filter the returned site membership requests by **siteId**. For example:  ``` (siteId=mySite) ```  The **where** parameter can also be used to filter by ***personId***. For example:  ``` where=(personId=person) ```  This may be combined with the siteId filter, as shown below:  ``` where=(siteId=mySite AND personId=person)) ```
     * The endpoint is owned by defaultname service owner
     * @param skipCount The number of entities that exist in the collection before those included in this list. If not supplied then the default value is 0.  (optional, default to 0)
     * @param maxItems The maximum number of items to return in the list. If not supplied then the default value is 100.  (optional, default to 100)
     * @param where A string to restrict the returned objects by using a predicate. (optional)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/site-membership-requests")
    suspend fun getSiteMembershipRequests(
        @retrofit2.http.Query("skipCount") skipCount: Int? = null,
        @retrofit2.http.Query("maxItems") maxItems: Int? = null,
        @retrofit2.http.Query("where") where: String? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteMembershipRequestWithPersonPaging
    /**
     * List site containers
     * Gets a list of containers for the site **siteId**.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param skipCount The number of entities that exist in the collection before those included in this list. If not supplied then the default value is 0.  (optional, default to 0)
     * @param maxItems The maximum number of items to return in the list. If not supplied then the default value is 100.  (optional, default to 100)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/sites/{siteId}/containers")
    suspend fun listSiteContainers(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Query("skipCount") skipCount: Int? = null,
        @retrofit2.http.Query("maxItems") maxItems: Int? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteContainerPaging
    /**
     * List group membership for site
     * **Note:** this endpoint is available in Alfresco 7.0.0 and newer versions.  Gets a list of group membership for site **siteId**.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param skipCount The number of entities that exist in the collection before those included in this list. If not supplied then the default value is 0.  (optional, default to 0)
     * @param maxItems The maximum number of items to return in the list. If not supplied then the default value is 100.  (optional, default to 100)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/sites/{siteId}/group-members")
    suspend fun listSiteGroups(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Query("skipCount") skipCount: Int? = null,
        @retrofit2.http.Query("maxItems") maxItems: Int? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteGroupPaging
    /**
     * List site membership requests
     * Gets a list of the current site membership requests for person **personId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.
     * The endpoint is owned by defaultname service owner
     * @param personId The identifier of a person. (required)
     * @param skipCount The number of entities that exist in the collection before those included in this list. If not supplied then the default value is 0.  (optional, default to 0)
     * @param maxItems The maximum number of items to return in the list. If not supplied then the default value is 100.  (optional, default to 100)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/people/{personId}/site-membership-requests")
    suspend fun listSiteMembershipRequestsForPerson(
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Query("skipCount") skipCount: Int? = null,
        @retrofit2.http.Query("maxItems") maxItems: Int? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteMembershipRequestPaging
    /**
     * List site memberships
     * Gets a list of site memberships for site **siteId**.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param skipCount The number of entities that exist in the collection before those included in this list. If not supplied then the default value is 0.  (optional, default to 0)
     * @param maxItems The maximum number of items to return in the list. If not supplied then the default value is 100.  (optional, default to 100)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     * @param where Optionally filter the list. *   &#x60;&#x60;&#x60;where&#x3D;(isMemberOfGroup&#x3D;false|true)&#x60;&#x60;&#x60;  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/sites/{siteId}/members")
    suspend fun listSiteMemberships(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Query("skipCount") skipCount: Int? = null,
        @retrofit2.http.Query("maxItems") maxItems: Int? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null,
        @retrofit2.http.Query("where") where: String? = null
    ): SiteMemberPaging
    /**
     * List site memberships
     * Gets a list of site membership information for person **personId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.  You can use the **where** parameter to filter the returned sites by **visibility** or site **preset**.  Example to filter by **visibility**, use any one of:  ``` (visibility='PRIVATE') (visibility='PUBLIC') (visibility='MODERATED') ```  Example to filter by site **preset**:  ``` (preset='site-dashboard') ```  The default sort order for the returned list is for sites to be sorted by ascending title. You can override the default by using the **orderBy** parameter. You can specify one or more of the following fields in the **orderBy** parameter: * id * title * role
     * The endpoint is owned by defaultname service owner
     * @param personId The identifier of a person. (required)
     * @param skipCount The number of entities that exist in the collection before those included in this list. If not supplied then the default value is 0.  (optional, default to 0)
     * @param maxItems The maximum number of items to return in the list. If not supplied then the default value is 100.  (optional, default to 100)
     * @param orderBy A string to control the order of the entities returned in a list. You can use the **orderBy** parameter to sort the list by one or more fields.  Each field has a default sort order, which is normally ascending order. Read the API method implementation notes above to check if any fields used in this method have a descending default search order.  To sort the entities in a specific order, you can use the **ASC** and **DESC** keywords for any field.  (optional)
     * @param relations Use the relations parameter to include one or more related entities in a single response. (optional)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     * @param where A string to restrict the returned objects by using a predicate. (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/people/{personId}/sites")
    suspend fun listSiteMembershipsForPerson(
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Query("skipCount") skipCount: Int? = null,
        @retrofit2.http.Query("maxItems") maxItems: Int? = null,
        @retrofit2.http.Query("orderBy") @CSV orderBy: List<String>? = null,
        @retrofit2.http.Query("relations") @CSV relations: List<String>? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null,
        @retrofit2.http.Query("where") where: String? = null
    ): SiteRolePaging
    /**
     * List sites
     * Gets a list of sites in this repository.  You can use the **where** parameter to filter the returned sites by **visibility** or site **preset**.  Example to filter by **visibility**, use any one of:  ``` (visibility='PRIVATE') (visibility='PUBLIC') (visibility='MODERATED') ```  Example to filter by site **preset**:  ``` (preset='site-dashboard') ```  The default sort order for the returned list is for sites to be sorted by ascending title. You can override the default by using the **orderBy** parameter. You can specify one or more of the following fields in the **orderBy** parameter: * id * title * description  You can use the **relations** parameter to include one or more related entities in a single response and so reduce network traffic.  The entity types in Alfresco are organized in a tree structure. The **sites** entity has two children, **containers** and **members**. The following relations parameter returns all the container and member objects related to each site:  ``` containers,members ```
     * The endpoint is owned by defaultname service owner
     * @param skipCount The number of entities that exist in the collection before those included in this list. If not supplied then the default value is 0.  (optional, default to 0)
     * @param maxItems The maximum number of items to return in the list. If not supplied then the default value is 100.  (optional, default to 100)
     * @param orderBy A string to control the order of the entities returned in a list. You can use the **orderBy** parameter to sort the list by one or more fields.  Each field has a default sort order, which is normally ascending order. Read the API method implementation notes above to check if any fields used in this method have a descending default search order.  To sort the entities in a specific order, you can use the **ASC** and **DESC** keywords for any field.  (optional)
     * @param relations Use the relations parameter to include one or more related entities in a single response. (optional)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     * @param where A string to restrict the returned objects by using a predicate. (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @GET("alfresco/versions/1/sites")
    suspend fun listSites(
        @retrofit2.http.Query("skipCount") skipCount: Int? = null,
        @retrofit2.http.Query("maxItems") maxItems: Int? = null,
        @retrofit2.http.Query("orderBy") @CSV orderBy: List<String>? = null,
        @retrofit2.http.Query("relations") @CSV relations: List<String>? = null,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null,
        @retrofit2.http.Query("where") where: String? = null
    ): SitePaging
    /**
     * Reject a site membership request
     * Reject a site membership request.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param inviteeId The invitee user name. (required)
     * @param siteMembershipRejectionBody Rejecting a request to join, optionally, allows the inclusion of comment.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @POST("alfresco/versions/1/sites/{siteId}/site-membership-requests/{inviteeId}/reject")
    suspend fun rejectSiteMembershipRequest(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("inviteeId") inviteeId: String,
        @retrofit2.http.Body siteMembershipRejectionBody: SiteMembershipRejectionBody
    ): Unit
    /**
     * Update a site
     * **Note:** this endpoint is available in Alfresco 5.2 and newer versions.  Update the details for the given site **siteId**. Site Manager or otherwise a (site) admin can update title, description or visibility.  Note: the id of a site cannot be updated once the site has been created.
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param siteBodyUpdate The site information to update. (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @PUT("alfresco/versions/1/sites/{siteId}")
    suspend fun updateSite(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Body siteBodyUpdate: SiteBodyUpdate,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteEntry
    /**
     * Update site membership of group
     * **Note:** this endpoint is available in Alfresco 7.0.0 and newer versions.  Update the membership of person **groupId** in site **siteId**. You can set the **role** to one of four types: * SiteConsumer * SiteCollaborator * SiteContributor * SiteManager
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param groupId The identifier of a group. (required)
     * @param siteMembershipBodyUpdate The groupId new role (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @PUT("alfresco/versions/1/sites/{siteId}/group-members/{groupId}")
    suspend fun updateSiteGroupMembership(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("groupId") groupId: String,
        @retrofit2.http.Body siteMembershipBodyUpdate: SiteMembershipBodyUpdate,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteGroupEntry
    /**
     * Update a site membership
     * Update the membership of person **personId** in site **siteId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.  You can set the **role** to one of four types:  * SiteConsumer * SiteCollaborator * SiteContributor * SiteManager
     * The endpoint is owned by defaultname service owner
     * @param siteId The identifier of a site. (required)
     * @param personId The identifier of a person. (required)
     * @param siteMembershipBodyUpdate The persons new role (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @PUT("alfresco/versions/1/sites/{siteId}/members/{personId}")
    suspend fun updateSiteMembership(
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Body siteMembershipBodyUpdate: SiteMembershipBodyUpdate,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteMemberEntry
    /**
     * Update a site membership request
     * Updates the message for the site membership request to site **siteId** for person **personId**.  You can use the `-me-` string in place of `<personId>` to specify the currently authenticated user.
     * The endpoint is owned by defaultname service owner
     * @param personId The identifier of a person. (required)
     * @param siteId The identifier of a site. (required)
     * @param siteMembershipRequestBodyUpdate The new message to display (required)
     * @param fields A list of field names.  You can use this parameter to restrict the fields returned within a response if, for example, you want to save on overall bandwidth.  The list applies to a returned individual entity or entries within a collection.  If the API method also supports the **include** parameter, then the fields specified in the **include** parameter are returned in addition to those specified in the **fields** parameter.  (optional)
     */
    @Headers(
        "Content-Type: application/json"
    )
    @PUT("alfresco/versions/1/people/{personId}/site-membership-requests/{siteId}")
    suspend fun updateSiteMembershipRequestForPerson(
        @retrofit2.http.Path("personId") personId: String,
        @retrofit2.http.Path("siteId") siteId: String,
        @retrofit2.http.Body siteMembershipRequestBodyUpdate: SiteMembershipRequestBodyUpdate,
        @retrofit2.http.Query("fields") @CSV fields: List<String>? = null
    ): SiteMembershipRequestEntry
}
