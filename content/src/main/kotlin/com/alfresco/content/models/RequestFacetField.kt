/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: Alfresco Content Services REST API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.alfresco.content.models

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * A simple facet field
 * @property field The facet field
 * @property label A label to include in place of the facet field
 * @property prefix Restricts the possible constraints to only indexed values with a specified prefix.
 * @property sort
 * @property method
 * @property missing When true, count results that match the query but which have no facet value for the field (in addition to the Term-based constraints).
 * @property limit
 * @property offset
 * @property mincount The minimum count required for a facet field to be included in the response.
 * @property facetEnumCacheMinDf
 * @property excludeFilters Filter Queries with tags listed here will not be included in facet counts. This is used for multi-select facetting.
 */
@JsonClass(generateAdapter = true)
data class RequestFacetField(
    @Json(name = "field") @field:Json(name = "field") var field: String? = null,
    @Json(name = "label") @field:Json(name = "label") var label: String? = null,
    @Json(name = "prefix") @field:Json(name = "prefix") var prefix: String? = null,
    @Json(name = "sort") @field:Json(name = "sort") var sort: RequestFacetField.SortEnum? = null,
    @Json(name = "method") @field:Json(name = "method") var method: RequestFacetField.MethodEnum? = null,
    @Json(name = "missing") @field:Json(name = "missing") var missing: Boolean? = null,
    @Json(name = "limit") @field:Json(name = "limit") var limit: Int? = null,
    @Json(name = "offset") @field:Json(name = "offset") var offset: Int? = null,
    @Json(name = "mincount") @field:Json(name = "mincount") var mincount: Int? = null,
    @Json(name = "facetEnumCacheMinDf") @field:Json(name = "facetEnumCacheMinDf") var facetEnumCacheMinDf: Int? = null,
    @Json(name = "excludeFilters") @field:Json(name = "excludeFilters") var excludeFilters: List<String>? = null
) {
    /**
     * Values: COUNT, INDEX
     */
    @JsonClass(generateAdapter = false)
    enum class SortEnum(val value: String) {
        @Json(name = "COUNT") COUNT("COUNT"),
        @Json(name = "INDEX") INDEX("INDEX")
    }
    /**
     * Values: ENUM, FC
     */
    @JsonClass(generateAdapter = false)
    enum class MethodEnum(val value: String) {
        @Json(name = "ENUM") ENUM("ENUM"),
        @Json(name = "FC") FC("FC")
    }
}
